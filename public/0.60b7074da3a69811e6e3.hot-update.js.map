{"version":3,"sources":["webpack:///./js/todo/cmps/TodoSearch.jsx?666a"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA;;;;AACA;;AACA;;AACA;;AACA;;;;;;AAEA,KAAI,aAAa;AAAA,SAAS,sDAAkB,KAAlB,CAAT;AAAA,EAAjB;;;;;;;;;;AAWA,cAAa,yBACX;AAAA,SAAU;AACT,mBAAgB,MAAM,OAAN,CAAc,cADrB;AAET,4BAAyB,MAAM,OAAN,CAAc;AAF9B,GAAV;AAAA,EADW,EAKX;AAAA,SAAa;AACZ,iBAAc;AAAA,WAAQ,SAAS,8BAAY,IAAZ,CAAT,CAAR;AAAA;AADF,GAAb;AAAA,EALW,EAQV,UARU,CAAb;;gBAUe,U;;;;;;;;;;;;;;;;;;;;;;;;;YArBX,U","file":"0.60b7074da3a69811e6e3.hot-update.js","sourcesContent":["import React from 'react';\nimport {connect} from 'react-redux';\nimport {Rx} from '../../utils/rxUtils';\nimport {setSearchText, searchTodos} from '../todoActions';\nimport Autocomplete from '../../commonComponents/Autocomplete';\n\nlet TodoSearch = props => <Autocomplete {...props} />;\n\t\n\n// let TodoSearch = ({todoSearchText, onTextChange, todoAutocompleteOptions}) => {\n// \tvar sub = new Rx.Subject();\n// \tsub.subscribe(text => onTextChange(text));\n// \treturn (\n// \t\t\t<Autocomplete options={todoAutocompleteOptions} text={todoSearchText} onTextChange={text=>sub.onNext(text)} />\n// \t\t)\n// }\n\nTodoSearch = connect(\n\t\tstate => ({\n\t\t\ttodoSearchText: state.todoApp.todoSearchText,\n\t\t\ttodoAutocompleteOptions: state.todoApp.todoAutocompleteOptions\n\t\t}),\n\t\tdispatch => ({\n\t\t\tonTextChange: text => dispatch(searchTodos(text))\n\t\t})\n\t)(TodoSearch);\n\nexport default TodoSearch\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./js/todo/cmps/TodoSearch.jsx\n **/"],"sourceRoot":""}